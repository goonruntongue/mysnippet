{
    "data_js": "//要素内を1文字ずつspanでラップするスクリプト\nlet content = $(\".target\");\nlet wrappedChars = [...content.text()].map((char) => {\n    return `<span>${char}</span>`;\n}).join(\"\");\ncontent.html(wrappedChars);",
    "data2_js": "//要素内のspanをタイプライター風に1つずつ表示するスクリプト\n$(\".target span\").hide();\n$(\".target span\").each((index, element) => {\n     setTimeout(() => {\n          $(element).show();\n     }, 20 * index);\n});",
    "typeW_js": "//クラス名target要素内をタイプライター表示\n//テキストノードのみをspanで括り、他のhtmlノードと共存できる\n$(\".target\").each((index, E) => {\n    $(E).contents().each((index, elem) => {\n        if (elem.nodeType == 3) {\n            let text = elem.nodeValue;\n            wrappedChar = [...text].map(char => `<span>${char}</span>`).join(\"\");\n            $(elem).replaceWith(wrappedChar);\n        }\n    });\n    $(\".target *\").each((index, elem) => {\n        $(elem).hide();\n        setTimeout(() => {\n            $(elem).show();\n        }, 5 * index);\n    })\n});",
    "data3_js": "//任意の位置のコードを切り出す\nlet content = $(\"要素名\").html();\nlet startIndex = content.indexOf(\"<任意のタグ名>\");\nlet endIndex = content.indexOf(\"</任意の終了タグ名>\") + \"</任意の終了タグ名>\".length;\nlet result = content.substring(startIndex, endIndex);\nconsole.log(result);",
    "dataBasicAuth_php": "#Basic_Authの記法\nAuthType Basic\nAuthName \"Input your ID and Password.\"\nAuthUserFile /home/flashmelody/www/copy-template-tags/.htpasswd\nrequire valid-user",
    "contextMenuTextEditorSelectionFixBat_text": "REM コンテキストメニューからメモ帳が消えたら…\nchcp 65001\n@echo off\nREM 1. regeditから\\HKEY_CLASSES_ROOT\\.txt\\ShellNewを確認\nREM 無ければ.txtを右クリックして新規 > キーでフォルダを作成する\nreg add HKEY_CLASSES_ROOT\\.txt\\ShellNew /f\n\nREM 2. ShellNew内に以下を追加\nREM 名前: ItemName\nREM 種類: Reg_EXPAND_SZ(展開可能な文字列値)\nREM データ: @%SystemRoot%¥system32¥notepad.exe,-470\nreg add HKEY_CLASSES_ROOT\\.txt\\ShellNew /v ItemName /t REG_EXPAND_SZ /d \"@%SystemRoot%\\system32\\notepad.exe,-470\" /f\n\nREM 名前: NullFile\nREM 種類: Reg_SZ(文字列値)\nREM データ: (無し)\nreg add HKEY_CLASSES_ROOT\\.txt\\ShellNew /v NullFile /t REG_SZ /d \"\" /f\n\nREM 3.エクスプローラーを再起動する\ntaskkill /f /im explorer.exe\nstart explorer.exe\n\necho 完了しました。\npause",
    "lottie_js": "<!--lottieスニペット-->\n<div class=\"lottie\"></div>\n<!-- need to load jQuery here -->\n\n<!-- Lottie BodyMovin -->\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/bodymovin/5.12.2/lottie.min.js\" integrity=\"sha512-jEnuDt6jfecCjthQAJ+ed0MTVA++5ZKmlUcmDGBv2vUI/REn6FuIdixLNnQT+vKusE2hhTk2is3cFvv5wA+Sgg==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\"></script>\n<script>\n    let animation = lottie.loadAnimation({\n            container: $(\".lottie\")[0],\n            renderer: \"svg\",\n            loop: true,\n            autoplay: false,\n            path: \"lottie.json\" //ローカルで再生する場合はpathではなくanimationDataにして、base64でdataURLにしてここにインラインとして貼り付ける\n        });\n\n    //クリックで再生・一時停止\n    let tgl = true;\n    $(\".lottie\").on(\"click\", () => {\n        tgl ? animation.play() : animation.pause(); // 停止ならstop();\n        tgl = !tgl;\n    });\n</script>",
    "scrlTrigSnipp_js": "// GSAP ScrollTriggerのスクリプトスニペット\ngsap.registerPlugin(\"ScrollTrigger\");\nScrollTrigger.create({\n    trigger: $(\".target\")[0],\n    start:\"top top\",\n    end:\"+=\"+$(\".target\").height(),\n    pin:true,\n    markers:true,\n    onUpdate:(self)=>{\n        let progress=self.progress;\n    }\n})",
    "sbstring_js": "\/\/一部の文字を切り出すスニペット\n    str = \"どうも僕の名前は太郎です。\";\n    start = str.indexOf(\"僕の名前は\") + \"僕の名前は\".length;\n    end = str.indexOf(\"です\");\n    var result = str.substring(start, end);\n    console.log(result);\n",
    "makeArr_js": "\/\/0から1まで0.1刻みの配列を一行で生成するスクリプト\n    \/\/ Array.from({JSオブジェクト形式},各要素に実行するcallback関数);\n    \/\/ callback関数は()=>実行するもの の形で（{}を使わないで）書けばreturnを省略できる\n    \/\/ vは配列の各要素、iはインデックス、vを使わない時は慣習上(_,i)という風に書くことも\n    let myArray = Array.from({length: 11}, (v, i) => i * 0.1);\n    console.log(myArray);",
    "gas_js": "### スプレッドシート：画像URLを生成するAutomation ###\nConcatenate(\"https://www.appsheet.com/template/gettablefileurl?\",\n\"appName=\",encodeurl(\"アドレスバーに記載のappName\"),\n\"&tableName=\",encodeurl(\"シート(テーブル)名\"),\n\"&fileName=\",encodeurl([画像をアップする(typeがImageの)カラム])\n)\"",
    "textBlock-htacess_php": "# フォルダ内の.txtファイルの直リンクからのアクセスをブロックする.htaccess\n<FilesMatch \"\\.txt$\">\n    Order Allow,Deny\n    Deny from all\n</FilesMatch>",
    "FtpDeployAction_js": "#Ftp-Deplay-Action のスニペット\n#Gitからホスティングサーバーに自動デプロイするパイプラインYAML（Yet Another Markup Language/YAML Ain't Markup Language）の作成\n#cloneしたフォルダ内直下に「.github/workflows/ftp.yml」を作成する\n#階層は以下のようになる\n#\n#cloneしたフォルダ\n#    |\n#　|_.github\n#    |    |\n#    |    |_workflows\n#    |         |  \n#    |         |_ftp.yml\n#    |\n#    |_アップロードするサイトフォルダ\n#\n#その後、setting>secrets and variablesからActionを選択、New Repository secretの値をそれぞれ設定\n#[Name *]欄にそれぞれ${{ secrets.XXXX }}のXXXX部分を記載\n#[Secret *]にそれぞれに対応するデータを入力する\n#\n#[ftp.ymlの内容]\n#※注意）with以下のキーの最後は「server_dir」ではなく「server-dir」（ハイフン）なので注意\n#\n#-------最低限これ以下をftp.ymlに記述する-------\nname: FTP Deploy\n\non:\n  push:\n    branches: main\n\njobs:\n  deploy:\n    name: 🚀 Deploy website every commit\n    runs-on: ubuntu-latest\n    steps:\n      - name: 🚚 Get latest code\n        uses: actions/checkout@v4\n\n      - name: 📂 Sync files\n        uses: SamKirkland/FTP-Deploy-Action@v4.3.4\n        with:\n          server: ${{ secrets.ftp_server }}\n          username: ${{ secrets.ftp_username }}\n          password: ${{ secrets.ftp_password }}\n          server-dir: ${{ secrets.ftp_server_dir }}",
    "inview_js": "<!-- inview-->\n<!-- need to load jQuery before-->\n<script src=\"\nhttps://cdn.jsdelivr.net/npm/jquery-inview@1.1.2/jquery.inview.min.js\n\"></script>\n<script>\n    $(\"要素名\").each(function(index, elem) {\n        $(elem).on(\"inview\", function(event, isInView) {\n            isInView ? $(elem).addClass(\"クラス名\") : $(elem).removeClass(\"クラス名\");\n        })\n    })\n</script>"
}